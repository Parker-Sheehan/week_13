{"ast":null,"code":"import { cartActions } from \"./cart\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://react-http-6c9d5-default-rtdb.firebaseio.com/\");\n      if (!response.ok) {\n        throw new Error(\"couldn't fetch data\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        count: cartData.count,\n        items: cartData.items\n      }));\n    } catch (error) {\n      dispatch(cartActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching data epic fail'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(cartActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-http-6c9d5-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(cartActions.showNotification({\n        status: \"success\",\n        title: \"success...\",\n        message: \"Sending cart succ!\"\n      }));\n    } catch (error) {\n      sendCartData().catch(error => {\n        dispatch(cartActions.showNotification({\n          status: \"error\",\n          title: \"error\",\n          message: \"error error\"\n        }));\n      });\n    }\n  };\n};","map":{"version":3,"names":["cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","count","items","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","catch"],"sources":["/Users/parkersheehan/Documents/DevMountain/week_13/advanced-redux/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./cart\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://react-http-6c9d5-default-rtdb.firebaseio.com/\"\n      );\n\n      if(!response.ok){\n        throw new Error(\"couldn't fetch data\")\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n       const cartData = await fetchData()\n       dispatch(cartActions.replaceCart({count: cartData.count, items: cartData.items}))\n    } catch (error){\n        dispatch(\n            cartActions.showNotification({\n                status: 'error',\n                title: 'Error!',\n                message: 'Fetching data epic fail'\n            })\n        )\n    }\n\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      cartActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://react-http-6c9d5-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(\n        cartActions.showNotification({\n          status: \"success\",\n          title: \"success...\",\n          message: \"Sending cart succ!\",\n        })\n      );\n    } catch (error) {\n      sendCartData().catch((error) => {\n        dispatch(\n          cartActions.showNotification({\n            status: \"error\",\n            title: \"error\",\n            message: \"error error\",\n          })\n        );\n      });\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,QAAQ;AAEpC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IAEzB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uDAAuD,CACxD;MAED,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;MACxC;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAElC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACD,MAAME,QAAQ,GAAG,MAAMP,SAAS,EAAE;MAClCD,QAAQ,CAACF,WAAW,CAACW,WAAW,CAAC;QAACC,KAAK,EAAEF,QAAQ,CAACE,KAAK;QAAEC,KAAK,EAAEH,QAAQ,CAACG;MAAK,CAAC,CAAC,CAAC;IACpF,CAAC,CAAC,OAAOC,KAAK,EAAC;MACXZ,QAAQ,CACJF,WAAW,CAACe,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CAAC,CACL;IACL;EAEF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOlB,QAAQ,IAAK;IACzBA,QAAQ,CACNF,WAAW,CAACe,gBAAgB,CAAC;MAC3BC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,EAChE;QACEiB,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAC3B,CAAC,CACF;MAED,IAAI,CAAChB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACF,CAAC;IACD,IAAI;MACF,MAAMc,WAAW,EAAE;MACnBnB,QAAQ,CACNF,WAAW,CAACe,gBAAgB,CAAC;QAC3BC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdK,YAAY,EAAE,CAACO,KAAK,CAAEZ,KAAK,IAAK;QAC9BZ,QAAQ,CACNF,WAAW,CAACe,gBAAgB,CAAC;UAC3BC,MAAM,EAAE,OAAO;UACfC,KAAK,EAAE,OAAO;UACdC,OAAO,EAAE;QACX,CAAC,CAAC,CACH;MACH,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}