{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  showCart: false,\n  notification: null,\n  items: [],\n  count: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialState,\n  reducers: {\n    increment(state, action) {\n      const newItem = action.payload;\n      state.count++;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    decrement(state, action) {\n      const {\n        id\n      } = action.payload;\n      state.count--;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n    toggleCart(state) {\n      state.showCart = !state.showCart;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message\n      };\n    }\n  }\n});\nconst sendCartData = cartData => {\n  return {\n    type\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","showCart","notification","items","count","cartSlice","name","reducers","increment","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","decrement","filter","toggleCart","showNotification","status","message","sendCartData","cartData","type","cartActions","actions","reducer"],"sources":["/Users/parkersheehan/Documents/DevMountain/week_13/advanced-redux/src/store/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  showCart: false,\n  notification: null,\n  items: [],\n  count: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialState,\n  reducers: {\n    increment(state, action) {\n      const newItem = action.payload;\n      state.count++;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    decrement(state, action) {\n      const { id } = action.payload;\n      state.count--;\n      const existingItem = state.items.find((item) => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n    toggleCart(state) {\n      state.showCart = !state.showCart;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nconst sendCartData = (cartData) => {\n  return {type}\n}\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,KAAK;EACfC,YAAY,EAAE,IAAI;EAClBC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,MAAM;EACZN,YAAY,EAAEA,YAAY;EAC1BO,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9BH,KAAK,CAACL,KAAK,EAAE;MACb,MAAMS,YAAY,GAAGJ,KAAK,CAACN,KAAK,CAACW,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvE,IAAI,CAACH,YAAY,EAAE;QACjBJ,KAAK,CAACN,KAAK,CAACc,IAAI,CAAC;UACfD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO,KAAK;UACzBZ,IAAI,EAAEK,OAAO,CAACU;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGT,OAAO,CAACO,KAAK;MACnE;IACF,CAAC;IACDI,SAASA,CAACb,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAM;QAAEM;MAAG,CAAC,GAAGN,MAAM,CAACE,OAAO;MAC7BH,KAAK,CAACL,KAAK,EAAE;MACb,MAAMS,YAAY,GAAGJ,KAAK,CAACN,KAAK,CAACW,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/D,IAAIH,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC/BV,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACoB,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACLH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MACxE;IACF,CAAC;IACDM,UAAUA,CAACf,KAAK,EAAE;MAChBA,KAAK,CAACR,QAAQ,GAAG,CAACQ,KAAK,CAACR,QAAQ;IAClC,CAAC;IACDwB,gBAAgBA,CAAChB,KAAK,EAAEC,MAAM,EAAE;MAC9BD,KAAK,CAACP,YAAY,GAAG;QACnBwB,MAAM,EAAEhB,MAAM,CAACE,OAAO,CAACc,MAAM;QAC7BL,KAAK,EAAEX,MAAM,CAACE,OAAO,CAACS,KAAK;QAC3BM,OAAO,EAAEjB,MAAM,CAACE,OAAO,CAACe;MAC1B,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAIC,QAAQ,IAAK;EACjC,OAAO;IAACC;EAAI,CAAC;AACf,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG1B,SAAS,CAAC2B,OAAO;AAC5C,eAAe3B,SAAS,CAAC4B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}